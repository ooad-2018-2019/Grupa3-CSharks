// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SeekAndFind.Models;

namespace SeekAndFind.Migrations
{
    [DbContext(typeof(SaFContext))]
    [Migration("20190618144829_nasljedjivanje")]
    partial class nasljedjivanje
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.11-servicing-32099")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SeekAndFind.Models.Fakultet", b =>
                {
                    b.Property<int>("FakultetId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.HasKey("FakultetId");

                    b.ToTable("Fakultet");
                });

            modelBuilder.Entity("SeekAndFind.Models.FakultetiAplikanta", b =>
                {
                    b.Property<int>("FakultetiAplikantaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FakultetId");

                    b.Property<int>("KorisnikId");

                    b.HasKey("FakultetiAplikantaId");

                    b.HasIndex("FakultetId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("FakultetiAplikanta");
                });

            modelBuilder.Entity("SeekAndFind.Models.FakultetiOglasa", b =>
                {
                    b.Property<string>("FakultetiOglasaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("FakultetId");

                    b.Property<int>("OglasId");

                    b.HasKey("FakultetiOglasaId");

                    b.HasIndex("FakultetId");

                    b.HasIndex("OglasId");

                    b.ToTable("FakultetiOglasa");
                });

            modelBuilder.Entity("SeekAndFind.Models.JeziciAplikanta", b =>
                {
                    b.Property<int>("JeziciAplikantaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("JezikId");

                    b.Property<int>("KorisnikId");

                    b.Property<int>("NivoCitanja");

                    b.Property<int>("NivoPisanja");

                    b.HasKey("JeziciAplikantaId");

                    b.HasIndex("JezikId");

                    b.HasIndex("KorisnikId");

                    b.ToTable("JeziciAplikanta");
                });

            modelBuilder.Entity("SeekAndFind.Models.JeziciOglasa", b =>
                {
                    b.Property<int>("JeziciOglasaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("JezikId");

                    b.Property<int>("NivoCitanja");

                    b.Property<int>("NivoPisanja");

                    b.Property<int>("OglasId");

                    b.HasKey("JeziciOglasaId");

                    b.HasIndex("JezikId");

                    b.HasIndex("OglasId");

                    b.ToTable("JeziciOglasa");
                });

            modelBuilder.Entity("SeekAndFind.Models.Jezik", b =>
                {
                    b.Property<int>("JezikId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.HasKey("JezikId");

                    b.ToTable("Jezik");
                });

            modelBuilder.Entity("SeekAndFind.Models.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Discriminator")
                        .IsRequired();

                    b.Property<string>("Email");

                    b.Property<string>("Grad");

                    b.Property<string>("Sifra");

                    b.Property<string>("Telefon");

                    b.HasKey("KorisnikId");

                    b.ToTable("Korisnik");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Korisnik");
                });

            modelBuilder.Entity("SeekAndFind.Models.Obavijest", b =>
                {
                    b.Property<int>("ObavijestId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnikId");

                    b.Property<int>("OglasId");

                    b.HasKey("ObavijestId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("OglasId");

                    b.ToTable("Obavijest");
                });

            modelBuilder.Entity("SeekAndFind.Models.Oglas", b =>
                {
                    b.Property<int>("OglasId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("Aktuelan");

                    b.Property<DateTime>("DatumIsteka");

                    b.Property<DateTime>("DatumObjavljivanja");

                    b.Property<string>("Grad");

                    b.Property<string>("Naziv");

                    b.Property<string>("Opis");

                    b.Property<int>("PoslodavacId");

                    b.Property<int>("ZanimanjeId");

                    b.HasKey("OglasId");

                    b.ToTable("Oglas");
                });

            modelBuilder.Entity("SeekAndFind.Models.RadnoIskustvo", b =>
                {
                    b.Property<int>("RadnoIskustvoId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DatumKraja");

                    b.Property<DateTime>("DatumPocetka");

                    b.Property<string>("Kompanija");

                    b.Property<int>("ZanimanjeId");

                    b.HasKey("RadnoIskustvoId");

                    b.HasIndex("ZanimanjeId");

                    b.ToTable("RadnoIskustvo");
                });

            modelBuilder.Entity("SeekAndFind.Models.RadnoIskustvoAplikanta", b =>
                {
                    b.Property<int>("RadnoIskustvoAplikantaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnikId");

                    b.Property<int>("RadnoIskustvoId");

                    b.HasKey("RadnoIskustvoAplikantaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("RadnoIskustvoId");

                    b.ToTable("RadnoIskustvoAplikanta");
                });

            modelBuilder.Entity("SeekAndFind.Models.RegistrovaniAplikanti", b =>
                {
                    b.Property<int>("RegistrovaniAplikantiId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnikId");

                    b.Property<int>("OglasId");

                    b.HasKey("RegistrovaniAplikantiId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("OglasId");

                    b.ToTable("RegistrovaniAplikanti");
                });

            modelBuilder.Entity("SeekAndFind.Models.SrednjaSkola", b =>
                {
                    b.Property<int>("SrednjaSkolaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.HasKey("SrednjaSkolaId");

                    b.ToTable("SrednjaSkola");
                });

            modelBuilder.Entity("SeekAndFind.Models.SrednjaSkolaAplikanta", b =>
                {
                    b.Property<int>("SrednjaSkolaAplikantaId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("KorisnikId");

                    b.Property<int>("SrednjaSkolaId");

                    b.HasKey("SrednjaSkolaAplikantaId");

                    b.HasIndex("KorisnikId");

                    b.HasIndex("SrednjaSkolaId");

                    b.ToTable("SrednjaSkolaAplikanta");
                });

            modelBuilder.Entity("SeekAndFind.Models.SrednjaSkolaOglasa", b =>
                {
                    b.Property<string>("SrednjaSkolaOglasaId")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("OglasId");

                    b.Property<int>("SrednjaSkolaId");

                    b.HasKey("SrednjaSkolaOglasaId");

                    b.HasIndex("OglasId");

                    b.HasIndex("SrednjaSkolaId");

                    b.ToTable("SrednjaSkolaOglasa");
                });

            modelBuilder.Entity("SeekAndFind.Models.Zanimanje", b =>
                {
                    b.Property<int>("ZanimanjeId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Naziv");

                    b.HasKey("ZanimanjeId");

                    b.ToTable("Zanimanje");
                });

            modelBuilder.Entity("SeekAndFind.Models.Aplikant", b =>
                {
                    b.HasBaseType("SeekAndFind.Models.Korisnik");

                    b.Property<DateTime?>("DatumRodjenja");

                    b.Property<string>("Ime");

                    b.Property<string>("Prezime");

                    b.ToTable("Aplikant");

                    b.HasDiscriminator().HasValue("Aplikant");
                });

            modelBuilder.Entity("SeekAndFind.Models.Poslodavac", b =>
                {
                    b.HasBaseType("SeekAndFind.Models.Korisnik");

                    b.Property<string>("Detalji");

                    b.Property<string>("Naziv");

                    b.Property<string>("OPoslodavcu");

                    b.ToTable("Poslodavac");

                    b.HasDiscriminator().HasValue("Poslodavac");
                });

            modelBuilder.Entity("SeekAndFind.Models.FakultetiAplikanta", b =>
                {
                    b.HasOne("SeekAndFind.Models.Fakultet", "Fakultet")
                        .WithMany()
                        .HasForeignKey("FakultetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SeekAndFind.Models.Aplikant", "Aplikant")
                        .WithMany("FakultetiAplikanta")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SeekAndFind.Models.FakultetiOglasa", b =>
                {
                    b.HasOne("SeekAndFind.Models.Fakultet", "Fakultet")
                        .WithMany()
                        .HasForeignKey("FakultetId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SeekAndFind.Models.Oglas", "Oglas")
                        .WithMany("FakultetiOglasa")
                        .HasForeignKey("OglasId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SeekAndFind.Models.JeziciAplikanta", b =>
                {
                    b.HasOne("SeekAndFind.Models.Jezik", "Jezik")
                        .WithMany()
                        .HasForeignKey("JezikId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SeekAndFind.Models.Aplikant", "Aplikant")
                        .WithMany("JeziciAplikanta")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SeekAndFind.Models.JeziciOglasa", b =>
                {
                    b.HasOne("SeekAndFind.Models.Jezik", "Jezik")
                        .WithMany()
                        .HasForeignKey("JezikId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SeekAndFind.Models.Oglas", "Oglas")
                        .WithMany("JeziciOglasa")
                        .HasForeignKey("OglasId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SeekAndFind.Models.Obavijest", b =>
                {
                    b.HasOne("SeekAndFind.Models.Aplikant", "Aplikant")
                        .WithMany("Obavijesti")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SeekAndFind.Models.Oglas", "Oglas")
                        .WithMany()
                        .HasForeignKey("OglasId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SeekAndFind.Models.RadnoIskustvo", b =>
                {
                    b.HasOne("SeekAndFind.Models.Zanimanje", "Zanimanje")
                        .WithMany()
                        .HasForeignKey("ZanimanjeId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SeekAndFind.Models.RadnoIskustvoAplikanta", b =>
                {
                    b.HasOne("SeekAndFind.Models.Aplikant", "Aplikant")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SeekAndFind.Models.RadnoIskustvo", "RadnoIskustvo")
                        .WithMany()
                        .HasForeignKey("RadnoIskustvoId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SeekAndFind.Models.RegistrovaniAplikanti", b =>
                {
                    b.HasOne("SeekAndFind.Models.Korisnik", "Korisnik")
                        .WithMany()
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SeekAndFind.Models.Oglas", "Oglas")
                        .WithMany("RegistrovaniAplikanti")
                        .HasForeignKey("OglasId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SeekAndFind.Models.SrednjaSkolaAplikanta", b =>
                {
                    b.HasOne("SeekAndFind.Models.Aplikant", "Aplikant")
                        .WithMany("SrednjaSkolaAplikanta")
                        .HasForeignKey("KorisnikId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SeekAndFind.Models.SrednjaSkola", "SrednjaSkola")
                        .WithMany()
                        .HasForeignKey("SrednjaSkolaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("SeekAndFind.Models.SrednjaSkolaOglasa", b =>
                {
                    b.HasOne("SeekAndFind.Models.Oglas", "Oglas")
                        .WithMany("SrednjaSkolaOglasa")
                        .HasForeignKey("OglasId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("SeekAndFind.Models.SrednjaSkola", "SrednjaSkola")
                        .WithMany()
                        .HasForeignKey("SrednjaSkolaId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
